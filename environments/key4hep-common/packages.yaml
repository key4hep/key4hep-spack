packages:
  all:
    target: [x86_64]
    variants: build_type=Release cxxstd=20
    buildable: true
    compiler: []

  acts:
    require: +dd4hep cxxstd=20 +json
  boost:
    require: +python
    buildable: true
  curl:
    require: +gssapi
  dd4hep:
    require: +edm4hep+lcio+xercesc+hepmc3
  gaudi:
    require: +aida+cppunit+examples+gaudialg+gperftools+heppdt+jemalloc+unwind+xercesc
  gdb:
    require: +python+tui+source-highlight~debuginfod
  # https://github.com/key4hep/key4hep-spack/pull/501
  geant4:
    require: +opengl+qt~vecgeom cxxstd=20
  hdf5:
    require: +cxx+hl
  # https://github.com/key4hep/key4hep-spack/issues/517
  lccd:
    require: +conddbmysql
  llvm:
    variants: ~flang~lldb~lld~lua~mlir~internal_unwind~polly~libomptarget~libomptarget_debug~gold~split_dwarf~llvm_dylib~link_llvm_dylib~omp_tsan~omp_as_runtime~code_signing~python~version_suffix~shlib_symbol_version~z3~zstd compiler-rt="none" libcxx="none" targets="x86"
  marlin:
    require: +lccd
  madgraph5amc:
    require: '@3: +pythia8'
  podio:
    require: +rntuple+rpath+sio
  py-numpy:
    require: ^openblas
  # https://github.com/key4hep/key4hep-spack/issues/474
  py-matplotlib:
    require: backend=qt5agg
  # Requested by Thomas Madlener for DESY, without CUDA and before v2
  py-torch:
    require: ~cuda
  texlive:
    require: scheme=basic
  xrootd:
    require: +krb5 cxxstd=20

  # Use the system OpenGL as recommended by spack
  # See https://github.com/key4hep/key4hep-spack/issues/318 and
  # https://github.com/key4hep/key4hep-spack/issues/516
  # A version is needed and we set it to 99 so that spack thinks it's the latest
  # (it may not work if the versions in the current system are not what's required
  # but that hasn't happened yet)
  opengl:
    buildable: False
    externals:
    - spec: opengl@99
      prefix: /usr
  openglu:
    buildable: False
    externals:
    - spec: openglu@99
      prefix: /usr
  mesa-glu:
    buildable: False
    externals:
    - spec: mesa-glu@99
      prefix: /usr
  # Use the system kerberos, otherwise the tickets obtained at login with the
  # system version don't appear for the spack kerberos (happening on lxplus at least)
  krb5:
    buildable: False
    externals:
    - spec: krb5@99
      prefix: /usr
  # Use the system ssh, otherwise the configuration for the provided ssh will likely be
  # different and things like ssh using kerberos won't work (by extension authentication
  # for git with ssh with kerberos)
  openssh:
    buildable: False
    externals:
    - spec: openssh@99
      prefix: /usr

  root:
    require: '@6.30: +davix+fftw+gsl+math+minuit+mlp+opengl~postgres~pythia6+pythia8+python+r+root7+roofit+rpath~shadow+sqlite+ssl+tbb+threads+tmva+unuran+vc+vdt+x+xml+xrootd cxxstd=20'
  py-tensorflow:
    require: ~cuda~nccl
  whizard:
    require: ~fastjet~latex+lcio~lhapdf+openloops+openmp+pythia8 hepmc=3
  k4simdelphes:
    require: ~delphes_hepmc
  evtgen:
    require: +photos
  photos:
    require: +hepmc3
  xgboost:
    require: ~openmp
  gperftools:
    require: ~libunwind

  # C++20 that don't appear above
  edm4hep:
    variants: cxxstd=20
  fastjet:
    variants: cxxstd=20
  gear:
    variants: cxxstd=20
  ilcutil:
    variants: cxxstd=20
  lcio:
    variants: cxxstd=20
  pythia8:
    require: +gzip+hepmc3
    variants: cxxstd=20
  sio:
    variants: cxxstd=20

  # onnx and py-onnx should have the same versions
  # And all should be consistent based on this table:
  # https://onnxruntime.ai/docs/reference/compatibility.html#onnx-opset-support
  onnx:
    require: '@1.15.0'
  py-onnx:
    require: '@1.15.0'
  py-onnxruntime:
    require: '@1.17.1'