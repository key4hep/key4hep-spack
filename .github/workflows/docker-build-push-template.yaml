name: Reusable docker build template
description: |
  This workflow builds the image for a specific architecture and pushes it to the registry.

on:
  workflow_call:
    inputs:
      os:
        required: true
        type: string
      runner:
        required: true
        type: string
      platform:
        required: true
        type: string
      registry:
        required: true
        type: string
    outputs:
      image-uri:
        description: "The URI of the built image with digest"
        value: ${{ jobs.build-and-push.outputs.image-uri }}

permissions:
  contents: read
  packages: write
  id-token: write
  attestations: write

jobs:
  build-and-push:
    runs-on: ${{ inputs.runner }}
    outputs:
      image-uri: ${{ inputs.registry }}/${{ github.repository_owner }}/key4hep-externals-${{ inputs.os }}:${{ fromJSON(steps.meta.outputs.json).labels['org.opencontainers.image.version'] }}-${{ inputs.platform }}@${{ steps.build.outputs.digest }}
    steps:
      - name: Free Disk Space (Ubuntu)
        uses: endersonmenezes/free-disk-space@v2
        with:
          remove_android: true
          remove_dotnet: true
          remove_haskell: true
          remove_tool_cache: true
          remove_swap: true
          remove_packages: "azure-cli google-cloud-cli microsoft-edge-stable google-chrome-stable firefox postgresql* temurin-* *llvm* mysql* dotnet-sdk-*"
          remove_packages_one_command: true
          remove_folders: "/usr/share/swift /usr/share/miniconda /usr/share/az* /usr/share/glade* /usr/local/lib/node_modules /usr/local/share/chromium /usr/local/share/powershell"
          testing: false
      - name: Checkout
        uses: actions/checkout@v4
        with:
          fetch-depth: 0
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3
      - name: Login to Docker Registry
        uses: docker/login-action@v3
        with:
          registry: ${{ inputs.registry }}
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}
      - name: Docker Meta
        id: meta
        uses: docker/metadata-action@v5
        with:
          images: ${{ inputs.registry }}/${{ github.repository_owner }}/key4hep-externals-${{ inputs.os }}
          flavor: latest=false,suffix=-${{ inputs.platform }}
      - name: Determine spack ref
        id: getref
        run: |
          echo "spack_ref=$(cat .latest-commit)" >>${GITHUB_OUTPUT}
      - name: Build and Push
        id: build
        uses: docker/build-push-action@v6
        with:
          push: true
          platforms: linux/${{ inputs.platform }}
          context: ./Docker/${{inputs.os}}
          file: ./Docker/${{inputs.os}}/Dockerfile-externals
          build-args: |
            GITHUB_REPOSITORY=${{ github.repository }}
            COMMIT_SHA=${{ github.sha }}
            SPACK_COMMIT=${{ steps.getref.outputs.spack_ref }}
            SPACK_BUILDCACHE=oci://ghcr.io/${{ github.repository_owner }}/spack-buildcache
            OCI_USERNAME=${{ github.actor }}
          secrets: |
            "ocipass=${{ secrets.GITHUB_TOKEN }}"
          tags: ${{ steps.meta.outputs.tags }}
          labels: ${{ steps.meta.outputs.labels }}